{"title":"SpringBoot 2.0.5.RELEASE 中文翻译笔记Getting Starte","date":"2018-09-23T07:20:35.000Z","slug":"SpringBoot-2-0-5-RELEASE-中文翻译笔记Getting-Starte","tags":["SpringBoot"],"categories":["SpringBoot"],"updated":"2018-09-23T07:21:31.048Z","content":"<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><p>如果你在开始使用SpringBoot或者是”Spring”时，请首先阅读本章节. 它回答了一些基本的问题，“它是什么？”，“能做什么”，“为什么选择它”. 本章介绍了SpringBoot,以及一些安装说明然后我们将构建第一个SpringBoot应用程序，并讨论一些核心的问题。</p>\n<h3 id=\"Introducing-Spring-Boot\"><a href=\"#Introducing-Spring-Boot\" class=\"headerlink\" title=\"Introducing Spring Boot\"></a>Introducing Spring Boot</h3><p>SpringBoot可以轻松的构建独立运行的基于Spring的应用程序。我们对Spring平台与一些其他的第三方库依赖进行了一些整合. 因此大多数的应用程序仅仅只需要少量<br>的配置就可以运行。</p>\n<p>你可以使用SpringBoot创建Java应用程序，它支持<code>java -jar</code> 或者是更为传统的<code>war</code>部署.我们将提供一个命令行工具卡来运行 “<code>spring scripts</code>“.</p>\n<p>我们的主要目标是:</p>\n<ul>\n<li>为所有Spring的开发提供快速且广泛的入门体验</li>\n<li>开箱即用</li>\n<li>提供一系列对大型项目通用的非功能性功能(例如嵌入式服务器，安全性，指标，运行状况检查和外部化配置).</li>\n<li>绝对没有代码生成，也不需要XML配置。</li>\n</ul>\n<h3 id=\"System-Requirements\"><a href=\"#System-Requirements\" class=\"headerlink\" title=\"System Requirements\"></a>System Requirements</h3><p>Spring Boot 2.0.5.RELEASE 必须  <a href=\"https://www.java.com\" target=\"_blank\" rel=\"noopener\">Java 8 or 9</a> 和<a href=\"https://docs.spring.io/spring/docs/5.0.9.RELEASE/spring-framework-reference/\" target=\"_blank\" rel=\"noopener\">Spring Framework 5.0.9.RELEASE</a>或者以上版本.</p>\n<p>为以下构建工具提供了显式构建支持：</p>\n<table>\n<thead>\n<tr>\n<th>Build Tool</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Maven</td>\n<td>3.2+</td>\n</tr>\n<tr>\n<td>Gradle</td>\n<td>4.4+</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"Servlet-Containers\"><a href=\"#Servlet-Containers\" class=\"headerlink\" title=\"Servlet Containers\"></a>Servlet Containers</h3><p>Spring Boot 支持如下嵌入式容器:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Name</th>\n<th style=\"text-align:center\">Servlet Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Tomcat 9.0</td>\n<td style=\"text-align:center\">3.1+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Jetty 9.4</td>\n<td style=\"text-align:center\">3.1+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Undertow 1.4</td>\n<td style=\"text-align:center\">3.1+</td>\n</tr>\n</tbody>\n</table>\n<p>你可以部署你的Spring Boot到任意Servlet 3.1+兼容的容器.</p>\n<h3 id=\"Installing-Spring-Boot\"><a href=\"#Installing-Spring-Boot\" class=\"headerlink\" title=\"Installing Spring Boot\"></a>Installing Spring Boot</h3><p>Spring Boot 可以使用 “<code>classic</code>“ JAVA开发工具安装为命令行工具. 无论哪种方式, 你需要<a href=\"https://www.java.com\" target=\"_blank\" rel=\"noopener\">Java SDK v1.8</a> 或者更高版本. 在这之前,<br>你可以通过以下命令来检查你当前所安装的JAVA版本:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> java -version</span><br></pre></td></tr></table></figure>\n<p>如果你是一名新的JAVA开发者，或者想体验一下Spring Boot, 你可以尝试使用<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#getting-started-installing-the-cli\" target=\"_blank\" rel=\"noopener\">Spring Boot CLI</a> (Command<br>Line Interface) . 除此之外, 请继续阅读 “<code>classic</code>“ 安装说明.</p>\n<h3 id=\"Installation-Instructions-for-the-Java-Developer\"><a href=\"#Installation-Instructions-for-the-Java-Developer\" class=\"headerlink\" title=\"Installation Instructions for the Java Developer\"></a>Installation Instructions for the Java Developer</h3><p>您可以像使用任何标准Java库一样使用Spring Boot. 为此，请在<code>classpath</code>中包含相应的<code>spring-boot-*.jar</code> 文件. Spring Boot 不需要任何特殊工具集成, 因此你可以使用任意的IDE或文本编辑器. 此外,Spring Boot应用程序没有什么特别之处,<br>因此，您可以像运行任何其他Java程序一样运行和调试Spring Boot应用程序。</p>\n<p>虽然您可以复制Spring Boot jar，但我们通常建议您使用支持依赖关系管理的构建工具 (例如Maven 或者 Gradle).</p>\n<h4 id=\"Maven-Installation\"><a href=\"#Maven-Installation\" class=\"headerlink\" title=\"Maven Installation\"></a>Maven Installation</h4><p>Spring Boot 兼容 Apache Maven 3.2+. 如果您还没有安装Maven, 你可以查看<a href=\"https://maven.apache.org\" target=\"_blank\" rel=\"noopener\">https://maven.apache.org/</a>.</p>\n<blockquote>\n<p>TIP: On many operating systems, Maven can be installed with a package manager. If you use<br>OSX Homebrew, try <code>brew install maven</code>. Ubuntu users can run<br><code>sudo apt-get install maven</code>. Windows users with <a href=\"https://chocolatey.org/[Chocolatey]\" target=\"_blank\" rel=\"noopener\">https://chocolatey.org/[Chocolatey]</a> can<br>run <code>choco install maven</code> from an elevated (administrator) prompt.</p>\n</blockquote>\n<p>Spring Boot 依赖使用 <code>org.springframework.boot</code> <code>groupId</code>. 通常, 你的<br>Maven POM 文件继承<code>spring-boot-starter-parent</code> 项目和声明对一个或多个“<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#using-boot-starter\" target=\"_blank\" rel=\"noopener\">Starters</a>”的依赖<br>Spring Boot也提供一个可选的<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#build-tool-plugins-maven-plugin\" target=\"_blank\" rel=\"noopener\">Maven plugin</a>来创建一个可执行的Jar。</p>\n<p>The following listing shows a typical <code>pom.xml</code> file:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\">&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</span><br><span class=\"line\">\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;</span><br><span class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;groupId&gt;com.example&lt;/groupId&gt;</span><br><span class=\"line\">\t&lt;artifactId&gt;myproject&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- Inherit defaults from Spring Boot --&gt;</span><br><span class=\"line\">\t&lt;parent&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t&lt;version&gt;&#123;spring-boot-version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t&lt;/parent&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- Add typical dependencies for a web application --&gt;</span><br><span class=\"line\">\t&lt;dependencies&gt;</span><br><span class=\"line\">\t\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;/dependencies&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- Package as an executable jar --&gt;</span><br><span class=\"line\">\t&lt;build&gt;</span><br><span class=\"line\">\t\t&lt;plugins&gt;</span><br><span class=\"line\">\t\t\t&lt;plugin&gt;</span><br><span class=\"line\">\t\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t\t&lt;/plugin&gt;</span><br><span class=\"line\">\t\t&lt;/plugins&gt;</span><br><span class=\"line\">\t&lt;/build&gt;</span><br><span class=\"line\">\t&lt;!-- Add Spring repositories --&gt;</span><br><span class=\"line\">\t&lt;!-- (you don't need this if you are using a .RELEASE version) --&gt;</span><br><span class=\"line\">\t&lt;repositories&gt;</span><br><span class=\"line\">\t\t&lt;repository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-snapshots&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;</span><br><span class=\"line\">\t\t\t&lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;</span><br><span class=\"line\">\t\t&lt;/repository&gt;</span><br><span class=\"line\">\t\t&lt;repository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-milestones&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/repository&gt;</span><br><span class=\"line\">\t&lt;/repositories&gt;</span><br><span class=\"line\">\t&lt;pluginRepositories&gt;</span><br><span class=\"line\">\t\t&lt;pluginRepository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-snapshots&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/pluginRepository&gt;</span><br><span class=\"line\">\t\t&lt;pluginRepository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-milestones&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/pluginRepository&gt;</span><br><span class=\"line\">\t&lt;/pluginRepositories&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>通过<code>spring-boot-starter-parent</code> 来使用Spring Boot时一个不错的选择, 但它可能并不适合所有的场景. 有时候你也许需要继承不同的parent POM, 或者你不想要默认的配置. 在这些情况下, 参见<br><a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#using-boot-maven-without-a-parent\" target=\"_blank\" rel=\"noopener\"> Section 13.2.2</a>,””<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#using-boot-maven-without-a-parent\" target=\"_blank\" rel=\"noopener\">Using Spring Boot without the Parent POM</a>“使用导入范围的替代解决方案。.</p>\n</blockquote>\n<h3 id=\"Installing-the-Spring-Boot-CLI\"><a href=\"#Installing-the-Spring-Boot-CLI\" class=\"headerlink\" title=\"Installing the Spring Boot CLI\"></a>Installing the Spring Boot CLI</h3><p>Spring Boot CLI (Command Line Interface) 是一个命令行工具使用它你可以快速的构建Spring原型的工程.它允许你运行<a href=\"http://groovy-lang.org/\" target=\"_blank\" rel=\"noopener\">Groovy</a>脚本,<br>这意味着您拥有熟悉的类似Java的语法，而没有太多的样板代码。<br>CLI不是构建Spring Boot的必要工具，但它绝对是让Spring应用程序开始运行的最快方法。</p>\n<h4 id=\"Manual-Installation\"><a href=\"#Manual-Installation\" class=\"headerlink\" title=\"Manual Installation\"></a>Manual Installation</h4><p>您可以从Spring软件库下载Spring CLI发行版：</p>\n<ul>\n<li><a href=\"https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.0.5.RELEASE/spring-boot-cli-2.0.5.RELEASE-bin.zip\" target=\"_blank\" rel=\"noopener\">spring-boot-cli-2.0.5.RELEASE-bin.zip</a></li>\n<li><a href=\"https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.0.5.RELEASE/spring-boot-cli-2.0.5.RELEASE-bin.tar.gz\" target=\"_blank\" rel=\"noopener\">spring-boot-cli-2.0.5.RELEASE-bin.tar.gz</a></li>\n</ul>\n<p>查看可用的历史版本<a href=\"https://repo.spring.io/snapshot/org/springframework/boot/spring-boot-cli/\" target=\"_blank\" rel=\"noopener\">snapshot distributions</a>.</p>\n<p>下载完成后，请按照解压缩的存档中的<a href=\"https://raw.github.com/spring-projects/spring-boot/v2.0.5.RELEASE/spring-boot-project/spring-boot-cli/src/main/content/INSTALL.txt\" target=\"_blank\" rel=\"noopener\">INSTALL.txt</a>说明进行操作.<br>综上所述, 这是一个 <code>spring</code> script<br>(<code>spring.bat</code> for Windows) 在<code>.zip</code> 文件中的<code>bin/</code>目录下 . 另外, 你可以使用<code>java -jar</code> 和 <code>.jar</code> 文件 (该脚本可帮助您确保正确设置类路径).</p>\n<h4 id=\"Installation-with-SDKMAN\"><a href=\"#Installation-with-SDKMAN\" class=\"headerlink\" title=\"Installation with SDKMAN!\"></a>Installation with SDKMAN!</h4><p>SDKMAN! (软件开发包管理器) 可以管理多个版本的各种二进制的SDKs，包括Groovy和Spring Boot CLI.<br>获取<a href=\"http://sdkman.io\" target=\"_blank\" rel=\"noopener\">SDKMAN!</a>和安装Spring Boot 可以通过如下命令：<br>commands:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sdk install springboot</span><br><span class=\"line\"><span class=\"meta\">$</span> spring --version</span><br><span class=\"line\">Spring Boot v&#123;spring-boot-version&#125;</span><br></pre></td></tr></table></figure>\n<p>如果您为CLI开发功能并希望轻松访问您构建的版本，请使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sdk install springboot dev /path/to/spring-boot/spring-boot-cli/target/spring-boot-cli-&#123;spring-boot-version&#125;-bin/spring-&#123;spring-boot-version&#125;/</span><br><span class=\"line\"><span class=\"meta\">$</span> sdk default springboot dev</span><br><span class=\"line\"><span class=\"meta\">$</span> spring --version</span><br><span class=\"line\">Spring CLI v&#123;spring-boot-version&#125;</span><br></pre></td></tr></table></figure>\n<p>前面的说明安装了一个名为<code>dev</code>的<code>spring</code>本地实例.它指向您的目标构建位置, 所以每次重建Spring Boot时，<code>spring</code>都是最新的。</p>\n<p>您可以通过运行以下命令来查看它：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sdk ls springboot</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">Available Springboot Versions</span><br><span class=\"line\">================================================================================</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> + dev</span><br><span class=\"line\">* &#123;spring-boot-version&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">+ - local version</span><br><span class=\"line\">* - installed</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> - currently in use</span><br><span class=\"line\">================================================================================</span><br></pre></td></tr></table></figure>\n<h4 id=\"OSX-Homebrew-Installation\"><a href=\"#OSX-Homebrew-Installation\" class=\"headerlink\" title=\"OSX Homebrew Installation\"></a>OSX Homebrew Installation</h4><p>如果你是Mac系统，你可以使用<a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a>, 你可以通过下面的命令安装Spring Boot:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew tap pivotal/tap</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install springboot</span><br></pre></td></tr></table></figure>\n<p>Homebrew 安装 <code>spring</code> 到 <code>/usr/local/bin</code>.</p>\n<blockquote>\n<p>NOTE:如果你没有看到公式, 你brew的版本可能过时了。在这种情况下, 可以运行 <code>brew update</code>更新版本.</p>\n</blockquote>\n<h4 id=\"MacPorts-Installation\"><a href=\"#MacPorts-Installation\" class=\"headerlink\" title=\"MacPorts Installation\"></a>MacPorts Installation</h4><p>如果你是Mac系统，你可以使用<a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"noopener\">MacPorts</a>, 你可以通过下面的命令安装Spring Boot:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo port install spring-boot-cli</span><br></pre></td></tr></table></figure>\n<h4 id=\"Command-line-Completion\"><a href=\"#Command-line-Completion\" class=\"headerlink\" title=\"Command-line Completion\"></a>Command-line Completion</h4><p>Spring Boot CLI为<a href=\"https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29\" target=\"_blank\" rel=\"noopener\">BASH</a> and<a href=\"https://en.wikipedia.org/wiki/Z_shell\" target=\"_blank\" rel=\"noopener\">zsh</a> 提供命令完成的脚本.您可以在任何shell中获取脚本（也称为spring），或者将其放入个人或系统范围的bash完成初始化中.在Debian system, 系统范围的脚本位于<code>/shell-completion/bash</code>中，当新shell启动时，该目录中的所有脚本都会执行。</p>\n<p>例如，如果已使用SDKMAN安装，则手动运行脚本,使用下面的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> . ~/.sdkman/candidates/springboot/current/shell-completion/bash/spring</span><br><span class=\"line\"><span class=\"meta\">$</span> spring &lt;HIT TAB HERE&gt;</span><br><span class=\"line\">  grab  help  jar  run  test  version</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>NOTE: 如果你使用<code>Homebrew</code>或者<code>MacPorts</code>安装Spring Boot CLI, 命令行完成脚本会自动在shell中注册。</p>\n</blockquote>\n<h4 id=\"Windows-Scoop-Installation\"><a href=\"#Windows-Scoop-Installation\" class=\"headerlink\" title=\"Windows Scoop Installation\"></a>Windows Scoop Installation</h4><p>如果你是windows系统，请使用 <a href=\"http://scoop.sh/\" target=\"_blank\" rel=\"noopener\">Scoop</a>,安装命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span> scoop bucket add extras</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> scoop install springboot</span><br></pre></td></tr></table></figure>\n<p>Scoop 安装 <code>spring</code> 到<code>~/scoop/apps/springboot/current/bin</code>.</p>\n<blockquote>\n<p>NOTE: 如果您没有看到应用清单,你安装的scoop也许过时了.在此情况下运行 <code>scoop update</code> 进行更新.</p>\n</blockquote>\n<h4 id=\"Quick-start-Spring-CLI-Example\"><a href=\"#Quick-start-Spring-CLI-Example\" class=\"headerlink\" title=\"Quick-start Spring CLI Example\"></a>Quick-start Spring CLI Example</h4><p>您可以使用以下Web应用程序来测试您的安装。首先，创建一个名为<code>app.groovy</code>的文件，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThisWillActuallyRun</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">\t<span class=\"function\">String <span class=\"title\">home</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"Hello World!\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后从shell运行它，如下所示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> spring run app.groovy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>NOTE: 第一次运行程序会比较慢, 因为会下载依赖.随后运行就会较快。</p>\n</blockquote>\n<p>打开浏览器输入<a href=\"http://localhost:8080\" target=\"_blank\" rel=\"noopener\">http://localhost:8080</a>`.你应该看到如下输出：</p>\n<hr>\n<pre><code>Hello World!\n</code></pre><hr>\n<p>=== Upgrading from an Earlier Version of Spring Boot<br>如果要从早期版本的Spring Boot升级, 检查<a href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide\" target=\"_blank\" rel=\"noopener\">“<code>migration guide</code>“</a><br>打开wiki，提供详细的升级说明。另请查看“<a href=\"https://github.com/spring-projects/spring-boot/wiki\" target=\"_blank\" rel=\"noopener\">发行说明</a>”，了解每个版本的“新的和值得注意的”功能列表。</p>\n<p>升级到新版本时, 一些属性被重命名或者移除.<br>Spring Boot 一种分析应用程序环境和启动时打印诊断的方法, 还可以在运行时临时迁移属性。可以通过添加如下依赖，启用此功能:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-properties-migrator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>runtime<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>WARNING</code>: 延迟添加到环境的属性（例如使用<code>@PropertySource时</code>）将不会被考虑在内</p>\n</blockquote>\n<blockquote>\n<p><code>NOTE</code>:完成迁移后，请确保从项目的依赖项中删除此模块。</p>\n</blockquote>\n<p>要升级现有CLI安装，请使用相应的软件包管理器命令 (for example, <code>brew upgrade</code>) , 如果手动安装CLI，请参考<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#getting-started-manual-cli-installation\" target=\"_blank\" rel=\"noopener\">standard instructions</a>, 记住要更新<code>PATH</code>环境变量删除任何旧的引用.</p>\n<h2 id=\"Developing-Your-First-Spring-Boot-Application\"><a href=\"#Developing-Your-First-Spring-Boot-Application\" class=\"headerlink\" title=\"Developing Your First Spring Boot Application\"></a>Developing Your First Spring Boot Application</h2><p>本节介绍如何开发一个简单的“Hello World！”Web应用程序，该应用程序突出了<code>Spring Boot</code>的一些主要功能.我们使用Maven来构建这个项目，因为大多数IDE都支持它.</p>\n<blockquote>\n<p><a href=\"https://spring.io/\" target=\"_blank\" rel=\"noopener\">spring.io</a>网站包含许多使用Spring Boot的“入门”指南<a href=\"https://spring.io/guides\" target=\"_blank\" rel=\"noopener\">guides</a>. 如果您需要解决特定问题, 可以先查看那里.您可以通过转到<a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener\">start.spring.io</a>并从依赖关系搜索器中选择“Web”启动器来快捷执行以下步骤。这样做会生成一个新的项目结构，以便您可以<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#getting-started-first-application-code\" target=\"_blank\" rel=\"noopener\">立即开始编码</a>。 Check有关更多详细信息，请查看<a href=\"https://docs.spring.io/initializr/docs/current/reference/htmlsingle/#user-guide\" target=\"_blank\" rel=\"noopener\">Spring Initializr documentation</a>。</p>\n</blockquote>\n<p>在开始之前，打开终端并运行以下命令以确保安装了有效的Java和Maven版本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> java -version</span><br><span class=\"line\">java version \"1.8.0_102\"</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_102-b14)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn -v</span><br><span class=\"line\">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00)</span><br><span class=\"line\">Maven home: /usr/local/Cellar/maven/3.3.9/libexec</span><br><span class=\"line\">Java version: 1.8.0_102, vendor: Oracle Corporation</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>NOTE</code>: 此示例需要在其自己的文件夹中创建。后续说明假定您已创建合适的文件夹，并且它是您当前的目录。</p>\n</blockquote>\n<h3 id=\"Creating-the-POM\"><a href=\"#Creating-the-POM\" class=\"headerlink\" title=\"Creating the POM\"></a>Creating the POM</h3><p>我们需要创建一个 <code>pom.xml</code> 文件. 这个 <code>pom.xml</code> 是用于构建项目的方法. 在<code>pom.xml</code>添加下面的内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\">&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</span><br><span class=\"line\">\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;</span><br><span class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;groupId&gt;com.example&lt;/groupId&gt;</span><br><span class=\"line\">\t&lt;artifactId&gt;myproject&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;parent&gt;</span><br><span class=\"line\">\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">\t\t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t&lt;version&gt;&#123;spring-boot-version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t&lt;/parent&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- Additional lines to be added here... --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- (you don't need this if you are using a .RELEASE version) --&gt;</span><br><span class=\"line\">\t&lt;repositories&gt;</span><br><span class=\"line\">\t\t&lt;repository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-snapshots&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;</span><br><span class=\"line\">\t\t\t&lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;</span><br><span class=\"line\">\t\t&lt;/repository&gt;</span><br><span class=\"line\">\t\t&lt;repository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-milestones&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/repository&gt;</span><br><span class=\"line\">\t&lt;/repositories&gt;</span><br><span class=\"line\">\t&lt;pluginRepositories&gt;</span><br><span class=\"line\">\t\t&lt;pluginRepository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-snapshots&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/pluginRepository&gt;</span><br><span class=\"line\">\t\t&lt;pluginRepository&gt;</span><br><span class=\"line\">\t\t\t&lt;id&gt;spring-milestones&lt;/id&gt;</span><br><span class=\"line\">\t\t\t&lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;</span><br><span class=\"line\">\t\t&lt;/pluginRepository&gt;</span><br><span class=\"line\">\t&lt;/pluginRepositories&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<p>上面的清单应该为您提供有效的构建. 你可以通过运行<code>mvn\npackage</code> 来进行测试(现在， 你可以忽略”<code>jar will be empty - no content was marked for\ninclusion!</code>“ 的警告).</p>\n<blockquote>\n<p><code>NOTE</code>: A此时，您可以将项目导入IDE(大多数现代Java IDE都包含对Maven的内置支持). 为简单起见，我们继续为此示例使用纯文本编辑器。</p>\n</blockquote>\n<h3 id=\"Adding-Classpath-Dependencies\"><a href=\"#Adding-Classpath-Dependencies\" class=\"headerlink\" title=\"Adding Classpath Dependencies\"></a>Adding Classpath Dependencies</h3><p>Spring Boot提供了许多“Starters”，可以将jar添加到<code>classpath</code>.我们的示例应用程序已经在POM的父节中使用了<code>spring-boot-starter-parent</code>. <code>spring-boot-starter-parent</code>是一个特殊的启动器，提供有用的Maven默认值。它还提供了一个依赖项管理部分(<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#using-boot-dependency-management\" target=\"_blank\" rel=\"noopener\">dependency-management</a>)，以便您可以省略依赖项的<code>version</code>版本标记。</p>\n<p>其他<code>“Starters”</code>提供了在开发特定类型的应用程序时可能需要的依赖项. 由于我们正在开发Web应用程序，<br>因此我们添加了<code>spring-boot-starter-web</code>依赖项。在此之前，我们可以通过运行以下命令来查看当前的内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn dependency:tree</span><br><span class=\"line\"></span><br><span class=\"line\">[INFO] com.example:myproject:jar:0.0.1-SNAPSHOT</span><br></pre></td></tr></table></figure>\n<p> <code>mvn dependency:tree</code> 命令打印一个树状结构来表示你的项目依赖. 您可以看到<code>spring-boot-starter-parent</code>本身不提供依赖关系. 要添加必要的依赖项，请编辑pom.xml并在父节下面添加<code>spring-boot-starter-web</code>依赖项：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果你再次运行 <code>mvn dependency:tree</code> ,您会看到现在有许多其他依赖项，包括Tomcat Web服务器和Spring Boot本身。</p>\n<h3 id=\"Writing-the-Code\"><a href=\"#Writing-the-Code\" class=\"headerlink\" title=\"Writing the Code\"></a>Writing the Code</h3><p>要完成我们的应用程序，我们需要创建一个Java文件. 默认情况下, Maven编译<code>src/main/java</code>的源文件 , 所以你需要创建该文件夹结构，然后添加一个名为<code>src/main/java/Example.java</code>的文件以包含以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">\t<span class=\"function\">String <span class=\"title\">home</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"Hello World!\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Example.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然这里的代码不多，但还是有很多代码。我们将在接下来的几节中逐步介绍重要部分.</p>\n<h4 id=\"The-RestController-and-RequestMapping-Annotations\"><a href=\"#The-RestController-and-RequestMapping-Annotations\" class=\"headerlink\" title=\"The @RestController and @RequestMapping Annotations\"></a>The @RestController and @RequestMapping Annotations</h4><p>在 <code>Example</code> 类中的第一个注解是<code>@RestController</code>. 这被称为<code>_构造型_</code>注释. 它为阅读代码的人提供了提示，而对于Spring来说，该类扮演着特定的角色.<br>在这种情况下,我们的类是一个 web <code>@Controller</code>,所以Spring在处理传入的Web请求时会考虑它。</p>\n<p> <code>@RequestMapping</code> 注解提供 “<code>routing</code>“ 信息. 它告诉任意的HTTP request 使用<code>/</code>路径的请求应该映射到<code>home</code>方法。<br><code>@RestController</code> 注解告诉Spring将结果字符串直接渲染回调用者。</p>\n<blockquote>\n<p>TIP: The <code>@RestController</code> and <code>@RequestMapping</code> 注解是Spring MVC的注解.<br>(它们不属于Spring Boot.) 有关更多详细信息，请参阅Spring参考文档中的<a href=\"https://docs.spring.io/spring/docs/5.0.9.RELEASE/spring-framework-reference/web.html#mvc\" target=\"_blank\" rel=\"noopener\">MVC部分</a>。</p>\n</blockquote>\n<h4 id=\"The-EnableAutoConfiguration-Annotation\"><a href=\"#The-EnableAutoConfiguration-Annotation\" class=\"headerlink\" title=\"The @EnableAutoConfiguration Annotation\"></a>The @EnableAutoConfiguration Annotation</h4><p>第二个类级别的注解是 <code>@EnableAutoConfiguration</code>.这个注解告诉<br>Spring Boot 根据你添加的jar依赖关系<code>“猜测”</code>你想要如何配置Spring。由于<code>spring-boot-starter-web</code>添加了Tomcat和Spring MVC，因此自动配置假定您正在开发Web应用程序并相应地设置Spring。.Starters and Auto-configuration</p>\n<blockquote>\n<p>自动配置旨在与“启动器”配合使用，但这两个概念并不直接相关。您可以自由选择并在首发之外选择jar依赖项。 Spring Boot仍然尽力自动配置您的应用程序。</p>\n</blockquote>\n<h4 id=\"The-“main“-Method\"><a href=\"#The-“main“-Method\" class=\"headerlink\" title=\"The “main“ Method\"></a>The “<code>main</code>“ Method</h4><p>应用程序的最后一部分是<code>main</code>方法. 这只是遵循应用程序入口点的Java约定的标准方法.我们的<code>main</code>方法通过调用run来委托Spring Boot的SpringApplication类。 <code>SpringApplication</code>引导我们的应用程序，启动<code>Spring</code>，然后启动自动配置的Tomcat Web服务器。 我们需要将<code>Example.class</code>作为参数传递给<code>run</code>方法，以告诉<code>SpringApplication</code>是主要的Spring组件。<code>args</code>数组也被传递以暴露任何命令行参数。</p>\n<h4 id=\"Running-the-Example\"><a href=\"#Running-the-Example\" class=\"headerlink\" title=\"Running the Example\"></a>Running the Example</h4><p>此时，您的应用程序应该可以工作. 由于您使用了<code>spring-boot-starter-parent</code> POM，因此您可以使用一个有用的运行目标来启动应用程序.<br> 输入<code>mvn spring-boot：run</code>从根项目目录运行以启动应用程序。您应该看到类似于以下内容的输出：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn spring-boot:run</span><br><span class=\"line\"></span><br><span class=\"line\">  .   ____          _            __ _ _</span><br><span class=\"line\"> /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</span><br><span class=\"line\">( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\</span><br><span class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class=\"line\">  '  |____| .__|_| |_|_| |_\\__, | / / / /</span><br><span class=\"line\"> =========|_|==============|___/=/_/_/_/</span><br><span class=\"line\"> :: Spring Boot ::  (v&#123;spring-boot-version&#125;)</span><br><span class=\"line\">....... . . .</span><br><span class=\"line\">....... . . . (log output here)</span><br><span class=\"line\">....... . . .</span><br><span class=\"line\">........ Started Example in 2.222 seconds (JVM running for 6.514)</span><br></pre></td></tr></table></figure>\n<p>打开浏览器输入<a href=\"http://localhost:8080\" target=\"_blank\" rel=\"noopener\">http://localhost:8080</a>, 你可以看到如下输出:</p>\n<hr>\n<pre><code>Hello World!\n</code></pre><hr>\n<p>要正常退出应用程序，请按<code>ctrl-c</code>.</p>\n<h3 id=\"Creating-an-Executable-Jar\"><a href=\"#Creating-an-Executable-Jar\" class=\"headerlink\" title=\"Creating an Executable Jar\"></a>Creating an Executable Jar</h3><p>我们通过创建一个完全自包含的可执行jar文件来完成我们的示例，我们可以在生产中运行它. 可执行的jars (有时被称为 “<code>fat jars</code>“)是包含已编译的类以及代码需要运行的所有jar依赖项的归档文件。</p>\n<blockquote>\n<p><strong><code>Executable jars and Java</code></strong> <br><br> Java没有提供加载嵌套jar文件的标准方法 (jar文件本身包含在jar中). 如果您要发布自包含的应用程序，这可能会有问题。</p>\n</blockquote>\n<p>为了解决这个问题，许多开发人员使用”<code>uber</code>“ jars. uber jar将所有应用程序依赖项中的所有类打包到一个存档中. 这种方法的问题在于很难看出应用程序中有哪些库.<br>如果在jars中使用相同的文件名（但具有不同的内容），也可能会有问题。</p>\n<p>Spring Boot采用<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#executable-jar\" target=\"_blank\" rel=\"noopener\">different approach</a>，让你直接嵌套jar。</p>\n<hr>\n<p>要创建可执行jar，我们需要将<code>spring-boot-maven-plugin</code>添加到我们的<code>pom.xml</code>中. 为此，请在<code>dependencies</code>部分下方插入以下行：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>spring-boot-starter-parent</code> POM包含<code>&lt;executions&gt;</code>配置以绑定<code>repackage</code>目标. 如果您不使用父POM，则需要自己声明此配置。有关详细信息，请参阅插件<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/maven-plugin/usage.html\" target=\"_blank\" rel=\"noopener\">plugin documentation</a>文档。</p>\n<p>保存<code>pom.xml</code>并从命令行运行<code>mvn package</code>，如下所示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn package</span><br><span class=\"line\"></span><br><span class=\"line\">[INFO] Scanning for projects...</span><br><span class=\"line\">[INFO]</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] Building myproject 0.0.1-SNAPSHOT</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] .... ..</span><br><span class=\"line\">[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ myproject ---</span><br><span class=\"line\">[INFO] Building jar: /Users/developer/example/spring-boot-example/target/myproject-0.0.1-SNAPSHOT.jar</span><br><span class=\"line\">[INFO]</span><br><span class=\"line\">[INFO] --- spring-boot-maven-plugin:&#123;spring-boot-version&#125;:repackage (default) @ myproject ---</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] BUILD SUCCESS</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n<p>如果你查看 <code>target</code> 目录,你应该可以看到 <code>myproject-0.0.1-SNAPSHOT.jar</code>. 大小在10MB左右.如果你想窥视内部，你可以使用<code>jar tvf</code>，如下所示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> jar tvf target/myproject-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n<p>你应该可以看到一个小得多的 <code>myproject-0.0.1-SNAPSHOT.jar.original</code>在 <code>target</code> 目录. 这是Maven在Spring Boot重新打包之前创建的原始jar文件。</p>\n<p>运行这个应用程序, 使用 <code>java -jar</code> 命令, 如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> java -jar target/myproject-0.0.1-SNAPSHOT.jar</span><br><span class=\"line\"></span><br><span class=\"line\">  .   ____          _            __ _ _</span><br><span class=\"line\"> /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</span><br><span class=\"line\">( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\</span><br><span class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class=\"line\">  '  |____| .__|_| |_|_| |_\\__, | / / / /</span><br><span class=\"line\"> =========|_|==============|___/=/_/_/_/</span><br><span class=\"line\"> :: Spring Boot ::  (v&#123;spring-boot-version&#125;)</span><br><span class=\"line\">....... . . .</span><br><span class=\"line\">....... . . . (log output here)</span><br><span class=\"line\">....... . . .</span><br><span class=\"line\">........ Started Example in 2.536 seconds (JVM running for 2.864)</span><br></pre></td></tr></table></figure>\n<p>要正常退出应用程序，请按<code>ctrl-c</code>.</p>\n<h3 id=\"What-to-Read-Next\"><a href=\"#What-to-Read-Next\" class=\"headerlink\" title=\"What to Read Next\"></a>What to Read Next</h3><p>希望本节提供了一些Spring Boot基础知识，让您开始编写自己的应用程序. 如果您是面向任务的开发人员类型，您可能需要跳转到<a href=\"https://spring.io/\" target=\"_blank\" rel=\"noopener\">spring.io</a>并查看一些<a href=\"https://spring.io/guides/\" target=\"_blank\" rel=\"noopener\">入门指南</a>，这些指南解决了具体的“如何使用Spring实现这一点？”问题。我们还有特定于Spring Boot的<a href=\"https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/reference/htmlsingle/#howto\" target=\"_blank\" rel=\"noopener\">“操作方法”</a>参考文档。</p>\n<p><a href=\"https://github.com/spring-projects/spring-boot\" target=\"_blank\" rel=\"noopener\">Spring Boot repository</a>有一堆可以<a href=\"https://github.com/spring-projects/spring-boot/tree/v2.0.5.RELEASE/spring-boot-samples\" target=\"_blank\" rel=\"noopener\">运行的示例</a>. 样本独立于其余代码 (也就是说，您不需要构建其余的来运行或使用示例).</p>\n","prev":{"title":"Eureka架构综述","slug":"Eureka架构综述"},"next":{"title":"Linux下安装部署ActiveMQ","slug":"Linux下安装部署ActiveMQ"},"link":"https://easyhaloo.github.io/post/SpringBoot-2-0-5-RELEASE-中文翻译笔记Getting-Starte/","toc":[{"title":"Getting Started","id":"Getting-Started","index":"1","children":[{"title":"Introducing Spring Boot","id":"Introducing-Spring-Boot","index":"1.1"},{"title":"System Requirements","id":"System-Requirements","index":"1.2"},{"title":"Servlet Containers","id":"Servlet-Containers","index":"1.3"},{"title":"Installing Spring Boot","id":"Installing-Spring-Boot","index":"1.4"},{"title":"Installation Instructions for the Java Developer","id":"Installation-Instructions-for-the-Java-Developer","index":"1.5","children":[{"title":"Maven Installation","id":"Maven-Installation","index":"1.5.1"}]},{"title":"Installing the Spring Boot CLI","id":"Installing-the-Spring-Boot-CLI","index":"1.6","children":[{"title":"Manual Installation","id":"Manual-Installation","index":"1.6.1"},{"title":"Installation with SDKMAN!","id":"Installation-with-SDKMAN","index":"1.6.2"},{"title":"OSX Homebrew Installation","id":"OSX-Homebrew-Installation","index":"1.6.3"},{"title":"MacPorts Installation","id":"MacPorts-Installation","index":"1.6.4"},{"title":"Command-line Completion","id":"Command-line-Completion","index":"1.6.5"},{"title":"Windows Scoop Installation","id":"Windows-Scoop-Installation","index":"1.6.6"},{"title":"Quick-start Spring CLI Example","id":"Quick-start-Spring-CLI-Example","index":"1.6.7"}]}]},{"title":"Developing Your First Spring Boot Application","id":"Developing-Your-First-Spring-Boot-Application","index":"2","children":[{"title":"Creating the POM","id":"Creating-the-POM","index":"2.1"},{"title":"Adding Classpath Dependencies","id":"Adding-Classpath-Dependencies","index":"2.2"},{"title":"Writing the Code","id":"Writing-the-Code","index":"2.3","children":[{"title":"The @RestController and @RequestMapping Annotations","id":"The-RestController-and-RequestMapping-Annotations","index":"2.3.1"},{"title":"The @EnableAutoConfiguration Annotation","id":"The-EnableAutoConfiguration-Annotation","index":"2.3.2"},{"title":"The “<code>main</code>“ Method","id":"The-“main“-Method","index":"2.3.3"},{"title":"Running the Example","id":"Running-the-Example","index":"2.3.4"}]},{"title":"Creating an Executable Jar","id":"Creating-an-Executable-Jar","index":"2.4"},{"title":"What to Read Next","id":"What-to-Read-Next","index":"2.5"}]}],"copyright":true}