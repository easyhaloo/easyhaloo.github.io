{"title":"JavaScript深入浅出(三)","date":"2018-08-23T14:26:41.000Z","slug":"JavaScript深入浅出-三","tags":["JavaScript"],"categories":["JavaScript"],"updated":"2018-08-23T14:27:38.349Z","content":"<h2 id=\"几种JS特性的模拟实现\"><a href=\"#几种JS特性的模拟实现\" class=\"headerlink\" title=\"几种JS特性的模拟实现\"></a>几种JS特性的模拟实现</h2><h1 id=\"一、new\"><a href=\"#一、new\" class=\"headerlink\" title=\"一、new\"></a>一、new</h1><blockquote>\n<p>new 运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象类型之一</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">objectFactory</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>(),</span><br><span class=\"line\">        Constructor = [].shift.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        obj._proto_ = Constructor.prototype;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ret = Constructor.apply(obj,<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> ret === <span class=\"string\">'object'</span> ? ret : obj;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"二、call\"><a href=\"#二、call\" class=\"headerlink\" title=\"二、call\"></a>二、call</h1><blockquote>\n<p>call() 方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.call = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"built_in\">window</span>;</span><br><span class=\"line\">    context.fn = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;argumnets.length;i++)&#123;</span><br><span class=\"line\">        args.push(<span class=\"string\">'arguments['</span>+i+<span class=\"string\">']'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> result =  <span class=\"built_in\">eval</span>(<span class=\"string\">'context.fn('</span>+res+<span class=\"string\">')'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> conext.fn();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//es6版本</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.call = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context,...args</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"built_in\">window</span>;</span><br><span class=\"line\">    context.fn = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = context.fn(...args);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.fn;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"三、apply\"><a href=\"#三、apply\" class=\"headerlink\" title=\"三、apply\"></a>三、apply</h1><blockquote>\n<p>apply() 方法在使用一个指定的this值和参数数组的前提下调用某个函数或方法.</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context,arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"built_in\">window</span>;</span><br><span class=\"line\">    context.fn = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!arr)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> context.fn();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = [];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = arr.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">          args.push(<span class=\"string\">'arr['</span> + i + <span class=\"string\">']'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    result = <span class=\"built_in\">eval</span>(<span class=\"string\">'context.fn('</span>+args+<span class=\"string\">')'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.fn;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//es6</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context,...arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"built_in\">window</span>;</span><br><span class=\"line\">    context.fn = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = context.fn(...arr);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.fn;</span><br><span class=\"line\">    returl result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"四、bind\"><a href=\"#四、bind\" class=\"headerlink\" title=\"四、bind\"></a>四、bind</h1><blockquote>\n<p>bind() 方法会创建一个新函数。当这个新函数被调用时，bind() 的第一个参数将作为它运行时的 this，之后的一序列参数将会在传递的实参前传入作为它的参数。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.bind =  <span class=\"built_in\">Function</span>.prototype.bind || <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span> != <span class=\"string\">'function'</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Function.prototype.bind - what is trying to be bound is not callable\"</span>);   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;<span class=\"comment\">//指向调用者函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fNOP = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fBound = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bindArgs = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.apply(<span class=\"keyword\">this</span> <span class=\"keyword\">instanceof</span> fNOP ? <span class=\"keyword\">this</span> : context,args.concat(bindArgs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fNOP.prototype = <span class=\"keyword\">this</span>.prototype;</span><br><span class=\"line\">    fBound.prototype = <span class=\"keyword\">new</span> fNOP();</span><br><span class=\"line\">    <span class=\"comment\">//可以使用 fBound.prototype = Object.create(this.prototype);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fBound;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//es6写法</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span>.prototype.bind = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context,...rest</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span> != <span class=\"string\">'function'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Function.prototype.bind - what is trying to be bound is not callable\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;<span class=\"comment\">//指代调用者的执行上下文</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\">...args</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> <span class=\"keyword\">instanceof</span> self)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> self(...rest,...args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.apply(context,rest.concat(args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.create = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">o</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    f.prototype = o;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> f;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"Mybatis源码分析之DataSource","slug":"Mybatis源码分析之DataSource"},"next":{"title":"JavaScript深入浅出(二)","slug":"JavaScript深入浅出-二"},"link":"https://easyhaloo.github.io/post/JavaScript深入浅出-三/","toc":[{"title":"一、new","id":"一、new","index":"1"},{"title":"二、call","id":"二、call","index":"2"},{"title":"三、apply","id":"三、apply","index":"3"},{"title":"四、bind","id":"四、bind","index":"4"}],"copyright":true}